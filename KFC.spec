# -*- mode: python ; coding: utf-8 -*-

block_cipher = None


a = Analysis(['KFC.py'],
             pathex=['D:\\KFC\\PyTorch-YOLOv3'],
             binaries=[],
             datas=[('./config/*', './config'),
             ('./data/overwatch/*', './data/overwatch'),
             ('./data/video/*', './data/video'),
             ('./data/coco.names', './data'),
             ('./data/overwatch.names', './data'),
             ('./data/train.txt', './data'),
             ('./npy/*', './npy'),
             ('./output/overwatch/*', './output/overwatch'),
             ('./output/output_features.npy', './output'),
             ('./weights/*', './weights'),
             ('./utils/*', './utils'),
             ('./linear_regression.py', './'),
             ('./get_features.py', './'),
             ('./detect.py', './'),
             ('./kNN.py', './'),
             ('./models.py', './')],
             hiddenimports=["os",
             "cv2",
             "detect",
             "get_features",
             "linear_regression",
             "numpy",
             "kNN",
             "math",
             "models",
             "utils.utils",
             "utils.datasets",
             "sys",
             "time",
             "datetime",
             "argparse",
             "PIL",
             "torch",
             "torch.utils.data",
             "torchvision",
             "torch.autograd",
             "matplotlib.pyplot",
             "matplotlib.patches",
             "matplotlib.ticker",
             "__future__",
             "torch.nn",
             "torch.nn.functional",
             "utils.parse_config",
             "tqdm",
             "glob",
             "random",
             "utils.augmentations",
             "torchvision.transforms",
             "numpy.core.multiarray",
             "numpy.random.common",
             "numpy.random.bounded_integers",
             "numpy.random.entropy"],
             hookspath=[],
             runtime_hooks=[],
             excludes=[],
             win_no_prefer_redirects=False,
             win_private_assemblies=False,
             cipher=block_cipher,
             noarchive=False)
pyz = PYZ(a.pure, a.zipped_data,
             cipher=block_cipher)
exe = EXE(pyz,
          a.scripts,
          [],
          exclude_binaries=True,
          name='KFC',
          debug=False,
          bootloader_ignore_signals=False,
          strip=False,
          upx=True,
          console=True )
coll = COLLECT(exe,
               a.binaries,
               a.zipfiles,
               a.datas,
               strip=False,
               upx=True,
               upx_exclude=[],
               name='KFC')
